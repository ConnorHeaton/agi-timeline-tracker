{"ast":null,"code":"var _jsxFileName = \"S:\\\\Proton Drive\\\\My files\\\\AGITimelines Code\\\\agi-timeline-tracker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport PredictionTable from './components/PredictionTable';\nimport FilterPanel from './components/FilterPanel';\nimport TimelineChart from './components/TimelineChart';\nimport DonationSection from './components/DonationSection';\nimport Footer from './components/Footer';\nimport './App.css';\n\n// For demo - would be replaced with API call in production\nimport { samplePredictions, prepareTimelineData, calculateMeanYear } from './utils/dataHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  const [filteredPredictions, setFilteredPredictions] = useState([]);\n  const [timelineData, setTimelineData] = useState({\n    chartData: [],\n    experts: []\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [timeframeFilter, setTimeframeFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('expert');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [selectedDefinition, setSelectedDefinition] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n\n  // Load predictions on component mount\n  useEffect(() => {\n    // This would be an API call in production\n    setPredictions(samplePredictions);\n    setFilteredPredictions(samplePredictions);\n\n    // Generate timeline data\n    // In production, this would likely be a separate API call\n    const data = prepareTimelineData(samplePredictions);\n    setTimelineData(data);\n  }, []);\n\n  // Handle filters\n  useEffect(() => {\n    // Filtering and sorting logic\n    let result = [...predictions];\n\n    // Apply search filter\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(p => p.expert.toLowerCase().includes(term) || p.organization.toLowerCase().includes(term) || p.source.toLowerCase().includes(term) || p.definition.toLowerCase().includes(term));\n    }\n\n    // Apply timeframe filter\n    if (timeframeFilter !== 'all') {\n      const currentYear = new Date().getFullYear();\n      switch (timeframeFilter) {\n        case 'near':\n          result = result.filter(p => {\n            const year = parseInt(p.estimatedDate.split('-')[0]);\n            return year && year <= currentYear + 10;\n          });\n          break;\n        case 'mid':\n          result = result.filter(p => {\n            const year = parseInt(p.estimatedDate.split('-')[0]);\n            return year && year > currentYear + 10 && year <= currentYear + 30;\n          });\n          break;\n        case 'far':\n          result = result.filter(p => {\n            const year = parseInt(p.estimatedDate.split('-')[0]);\n            return year && year > currentYear + 30;\n          });\n          break;\n        default:\n          break;\n      }\n    }\n\n    // Apply sorting\n    result.sort((a, b) => {\n      let comparison = 0;\n      switch (sortBy) {\n        case 'expert':\n          comparison = a.expert.localeCompare(b.expert);\n          break;\n        case 'date':\n          const getFirstYear = date => parseInt(date.split('-')[0]);\n          comparison = getFirstYear(a.estimatedDate) - getFirstYear(b.estimatedDate);\n          break;\n        case 'predictionDate':\n          const dateA = new Date(a.predictionDate);\n          const dateB = new Date(b.predictionDate);\n          comparison = dateA - dateB;\n          break;\n        case 'organization':\n          comparison = a.organization.localeCompare(b.organization);\n          break;\n        default:\n          break;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n    setFilteredPredictions(result);\n  }, [predictions, searchTerm, timeframeFilter, sortBy, sortDirection]);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(prev => !prev);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // Handle definition click\n  const handleDefinitionClick = definition => {\n    setSelectedDefinition(definition);\n  };\n\n  // Close definition modal\n  const closeDefinitionModal = () => {\n    setSelectedDefinition(null);\n  };\n\n  // Calculate median predicted year\n  const calculateMedianYear = () => {\n    const years = predictions.map(p => {\n      const dateMatch = p.estimatedDate.match(/\\d{4}/g);\n      if (dateMatch && dateMatch.length > 0) {\n        if (dateMatch.length === 1) return parseInt(dateMatch[0]);\n        return Math.round((parseInt(dateMatch[0]) + parseInt(dateMatch[dateMatch.length - 1])) / 2);\n      }\n      return null;\n    }).filter(y => y !== null);\n    if (years.length === 0) return null;\n    years.sort((a, b) => a - b);\n    const mid = Math.floor(years.length / 2);\n    return years.length % 2 === 0 ? Math.round((years[mid - 1] + years[mid]) / 2) : years[mid];\n  };\n  const medianYear = calculateMedianYear();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onToggleDarkMode: toggleDarkMode,\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [medianYear && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Median Predicted Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-value\",\n            children: medianYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Time Until Median Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-value countdown\",\n            children: [medianYear - new Date().getFullYear(), \" Years\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FilterPanel, {\n        searchTerm: searchTerm,\n        onSearchChange: e => setSearchTerm(e.target.value),\n        timeframeFilter: timeframeFilter,\n        onTimeframeChange: e => setTimeframeFilter(e.target.value),\n        sortBy: sortBy,\n        onSortChange: e => setSortBy(e.target.value),\n        sortDirection: sortDirection,\n        onToggleSortDirection: () => setSortDirection(prev => prev === 'asc' ? 'desc' : 'asc')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PredictionTable, {\n        predictions: filteredPredictions,\n        isDarkMode: isDarkMode,\n        onViewDefinition: handleDefinitionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Historical AGI Timeline Predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timeline-description\",\n          children: \"How expert predictions have changed over time (showing mean year for date ranges)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TimelineChart, {\n          data: timelineData,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DonationSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), selectedDefinition && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: closeDefinitionModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"definition-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AGI Definition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedDefinition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeDefinitionModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VkLCzQ8ylvYyWDFYuYqn36wcY34=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","PredictionTable","FilterPanel","TimelineChart","DonationSection","Footer","samplePredictions","prepareTimelineData","calculateMeanYear","jsxDEV","_jsxDEV","App","_s","predictions","setPredictions","filteredPredictions","setFilteredPredictions","timelineData","setTimelineData","chartData","experts","searchTerm","setSearchTerm","timeframeFilter","setTimeframeFilter","sortBy","setSortBy","sortDirection","setSortDirection","selectedDefinition","setSelectedDefinition","isDarkMode","setIsDarkMode","data","result","term","toLowerCase","filter","p","expert","includes","organization","source","definition","currentYear","Date","getFullYear","year","parseInt","estimatedDate","split","sort","a","b","comparison","localeCompare","getFirstYear","date","dateA","predictionDate","dateB","toggleDarkMode","prev","document","body","classList","toggle","handleDefinitionClick","closeDefinitionModal","calculateMedianYear","years","map","dateMatch","match","length","Math","round","y","mid","floor","medianYear","className","children","onToggleDarkMode","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","e","target","value","onTimeframeChange","onSortChange","onToggleSortDirection","onViewDefinition","onClick","stopPropagation","_c","$RefreshReg$"],"sources":["S:/Proton Drive/My files/AGITimelines Code/agi-timeline-tracker/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport PredictionTable from './components/PredictionTable';\nimport FilterPanel from './components/FilterPanel';\nimport TimelineChart from './components/TimelineChart';\nimport DonationSection from './components/DonationSection';\nimport Footer from './components/Footer';\nimport './App.css';\n\n// For demo - would be replaced with API call in production\nimport { samplePredictions, prepareTimelineData, calculateMeanYear } from './utils/dataHelpers';\n\nfunction App() {\n  const [predictions, setPredictions] = useState([]);\n  const [filteredPredictions, setFilteredPredictions] = useState([]);\n  const [timelineData, setTimelineData] = useState({ chartData: [], experts: [] });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [timeframeFilter, setTimeframeFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('expert');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [selectedDefinition, setSelectedDefinition] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n\n  // Load predictions on component mount\n  useEffect(() => {\n    // This would be an API call in production\n    setPredictions(samplePredictions);\n    setFilteredPredictions(samplePredictions);\n    \n    // Generate timeline data\n    // In production, this would likely be a separate API call\n    const data = prepareTimelineData(samplePredictions);\n    setTimelineData(data);\n  }, []);\n\n  // Handle filters\n  useEffect(() => {\n    // Filtering and sorting logic\n    let result = [...predictions];\n    \n    // Apply search filter\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(p => \n        p.expert.toLowerCase().includes(term) || \n        p.organization.toLowerCase().includes(term) ||\n        p.source.toLowerCase().includes(term) ||\n        p.definition.toLowerCase().includes(term)\n      );\n    }\n    \n    // Apply timeframe filter\n    if (timeframeFilter !== 'all') {\n      const currentYear = new Date().getFullYear();\n      \n      switch (timeframeFilter) {\n        case 'near':\n          result = result.filter(p => {\n            const year = parseInt(p.estimatedDate.split('-')[0]);\n            return year && year <= currentYear + 10;\n          });\n          break;\n        case 'mid':\n          result = result.filter(p => {\n            const year = parseInt(p.estimatedDate.split('-')[0]);\n            return year && year > currentYear + 10 && year <= currentYear + 30;\n          });\n          break;\n        case 'far':\n          result = result.filter(p => {\n            const year = parseInt(p.estimatedDate.split('-')[0]);\n            return year && year > currentYear + 30;\n          });\n          break;\n        default:\n          break;\n      }\n    }\n    \n    // Apply sorting\n    result.sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'expert':\n          comparison = a.expert.localeCompare(b.expert);\n          break;\n        case 'date':\n          const getFirstYear = date => parseInt(date.split('-')[0]);\n          comparison = getFirstYear(a.estimatedDate) - getFirstYear(b.estimatedDate);\n          break;\n        case 'predictionDate':\n          const dateA = new Date(a.predictionDate);\n          const dateB = new Date(b.predictionDate);\n          comparison = dateA - dateB;\n          break;\n        case 'organization':\n          comparison = a.organization.localeCompare(b.organization);\n          break;\n        default:\n          break;\n      }\n      \n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n    \n    setFilteredPredictions(result);\n  }, [predictions, searchTerm, timeframeFilter, sortBy, sortDirection]);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(prev => !prev);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // Handle definition click\n  const handleDefinitionClick = (definition) => {\n    setSelectedDefinition(definition);\n  };\n\n  // Close definition modal\n  const closeDefinitionModal = () => {\n    setSelectedDefinition(null);\n  };\n\n  // Calculate median predicted year\n  const calculateMedianYear = () => {\n    const years = predictions.map(p => {\n      const dateMatch = p.estimatedDate.match(/\\d{4}/g);\n      if (dateMatch && dateMatch.length > 0) {\n        if (dateMatch.length === 1) return parseInt(dateMatch[0]);\n        return Math.round((parseInt(dateMatch[0]) + parseInt(dateMatch[dateMatch.length - 1])) / 2);\n      }\n      return null;\n    }).filter(y => y !== null);\n    \n    if (years.length === 0) return null;\n    \n    years.sort((a, b) => a - b);\n    const mid = Math.floor(years.length / 2);\n    return years.length % 2 === 0 ? Math.round((years[mid - 1] + years[mid]) / 2) : years[mid];\n  };\n\n  const medianYear = calculateMedianYear();\n\n  return (\n    <div className={`app-container ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\n      <Header \n        onToggleDarkMode={toggleDarkMode} \n        isDarkMode={isDarkMode} \n      />\n      \n      <main className=\"main-content\">\n        {medianYear && (\n          <div className=\"metrics-dashboard\">\n            <div className=\"metric-box\">\n              <h3>Median Predicted Year</h3>\n              <div className=\"metric-value\">{medianYear}</div>\n            </div>\n            <div className=\"metric-box\">\n              <h3>Time Until Median Prediction</h3>\n              <div className=\"metric-value countdown\">{medianYear - new Date().getFullYear()} Years</div>\n            </div>\n          </div>\n        )}\n        \n        <FilterPanel \n          searchTerm={searchTerm}\n          onSearchChange={e => setSearchTerm(e.target.value)}\n          timeframeFilter={timeframeFilter}\n          onTimeframeChange={e => setTimeframeFilter(e.target.value)}\n          sortBy={sortBy}\n          onSortChange={e => setSortBy(e.target.value)}\n          sortDirection={sortDirection}\n          onToggleSortDirection={() => setSortDirection(prev => prev === 'asc' ? 'desc' : 'asc')}\n        />\n        \n        <PredictionTable \n          predictions={filteredPredictions} \n          isDarkMode={isDarkMode}\n          onViewDefinition={handleDefinitionClick}\n        />\n        \n        <div className=\"timeline-section\">\n          <h2>Historical AGI Timeline Predictions</h2>\n          <p className=\"timeline-description\">\n            How expert predictions have changed over time (showing mean year for date ranges)\n          </p>\n          <TimelineChart data={timelineData} isDarkMode={isDarkMode} />\n        </div>\n        \n        <DonationSection />\n      </main>\n      \n      <Footer />\n      \n      {selectedDefinition && (\n        <div className=\"modal-overlay\" onClick={closeDefinitionModal}>\n          <div className=\"definition-modal\" onClick={e => e.stopPropagation()}>\n            <h3>AGI Definition</h3>\n            <p>{selectedDefinition}</p>\n            <button onClick={closeDefinitionModal}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}